/**
 * Copyright 2022
 *
 * This file is part of On-line POMDP Planning Toolkit (OPPT).
 * OPPT is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License published by the Free Software
 * Foundation, either version 2 of the License, or (at your option) any later
 * version.
 *
 * OPPT is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * OPPT. If not, see http://www.gnu.org/licenses/.
 */
#ifndef _KAMIKAZE_TRAJ_GEN_HEURISTIC_PLUGIN_HPP_
#define _KAMIKAZE_TRAJ_GEN_HEURISTIC_PLUGIN_HPP_
#include "oppt/plugin/Plugin.hpp"
#include "../PentestProblemUtils/PentestProblemGeneralUtils.hpp"

namespace oppt {
class PentestProblemHeuristicPlugin : public HeuristicPlugin {
public:
  PentestProblemHeuristicPlugin() : HeuristicPlugin() {}

  virtual ~PentestProblemHeuristicPlugin() {}

  virtual bool load(const std::string &optionsFile) override {
    parseOptions_<PentestProblemGeneralOptions>(optionsFile);

    // Retrieve pointer to options file
    generalOptions_ = static_cast<PentestProblemGeneralOptions *>(options_.get());

    return true;
  }

  virtual FloatType
  getHeuristicValue(const HeuristicInfo *heuristicInfo) const override {
    VectorFloat currentState =
        heuristicInfo->currentState->as<VectorState>()->asVector();

    int nMachines = generalOptions_ -> nMachines;
    int nHackedMachines = 0;
    int nMachineParams = generalOptions_->nMachineParams;
    for (int i = 0; i < nMachines; i++) {
      int hacked_idx = (i + 1) * nMachineParams - 1;
      if (currentState[hacked_idx] == HACKED) {
        nHackedMachines++;
      }
    }
    // Maximize number of hacked machine
    int heuristic = (nMachines - nHackedMachines) / nMachines;
    return heuristic;
  }

private:
  // Pointer to structure with parsed options values
  PentestProblemGeneralOptions* generalOptions_;
};

OPPT_REGISTER_HEURISTIC_PLUGIN(PentestProblemHeuristicPlugin)

} // namespace oppt

#endif
