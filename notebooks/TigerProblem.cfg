# General-purpose settings.
verbose = true
logPath = /home/jimy/Desktop/testing
overwriteExistingLogFiles = true
logFilePostfix = maze_problem_test
saveParticles = false


############################## PLUGIN SHARED LIBRARIES TO LOAD #############################

[plugins]

# Checked
executionInitialBeliefPlugin = libMazeProblemInitialBeliefPlugin.so
planningInitialBeliefPlugin = libMazeProblemInitialBeliefPlugin.so


# Shared observation plugin with Kamikaze Gen
planningObservationPlugin = libMazeProblemObservationPlugin.so
executionObservationPlugin = libMazeProblemObservationPlugin.so

# Checked	
planningRewardPlugin = libMazeProblemRewardPlugin.so
executionRewardPlugin = libMazeProblemRewardPlugin.so


# Checked
planningTransitionPlugin = libMazeProblemTransitionPlugin.so
executionTransitionPlugin = libMazeProblemTransitionPlugin.so

# Needs fixing
heuristicPlugin = libMazeProblemHeuristicPlugin.so

# Checked
planningTerminalPlugin = libMazeProblemTerminalPlugin.so
executionTerminalPlugin = libMazeProblemTerminalPlugin.so





############################ PLUGIN SPECIFIC OPTIONS ##################################
[initialBeliefOptions]
lowerBound = [0.5 0.5]
upperBound = [0.5 0.5] 


[observationPluginOptions]
#Observaion Error
observationNoise = 0.15


[rewardPluginOptions]
correctGuessReward = 10
wrongGuessPenalty = -100
stepPenalty = -1



################################### EXPERIMENT SPECIFIC OPTIONS #############################
[problem]
# Number of simulation runs
nRuns = 1 

# Maximum number of steps to reach the goal
nSteps = 25


############# OPTIONAL GAZEBO Environment Specifications for physics engine and viewer #################################

# The planning environment SDF
planningEnvironmentPath = MazeEnvironment.sdf

# The execution environment SDF
executionEnvironmentPath = MazeEnvironment.sdf

# The robot SDF model
robotName = Player

# Logs the gazebo states 
enableGazeboStateLogging = false

# The discount factor of the reward model
discountFactor = 0.98

# Using state- action- and observation spaces that are normalized to [0, 1]
normalizedSpaces = false

allowCollisions = false

# The maximum time to spend on each step, in milliseconds (0 => no time limit)
stepTimeout = 500


[state]
# State space description
# MAZE PROBLEM CAN BE DEFINED AS A 1-D dimension with 2 states
additionalDimensions = 2
#additionalDimensionLimits = [[0, 1]]


[action]
# Action space is only x,y displacement for the pedestrian
# 
additionalDimensions = 6
additionalDimensionLimits = [[0, 2], [0,2] , [0,2]]





[observation]
# The observation space is the same space as the state space
additionalDimensions = 1
additionalDimensionLimits = [[0, 1]]



[changes]
hasChanges = false
changesPath = 
areDynamic = false

[ABT]
# The number of trajectories to simulate per time step (0 => wait for timeout)
historiesPerStep = 0

# If this is set to "true", ABT will prune the tree after every step.
pruneEveryStep = true

# If this is set to "true", ABT will reset the tree instead of modifying it when
# changes occur.
resetOnChanges = false

# The particle filter to use
particleFilter = observationModel

# The maximum depth to search in the tree, relative to the current belief.
maximumDepth = 10000

# The minimum number of particles for the current belief state in a simulation.
# Extra particles will be resampled via a particle filter if the particle count
# for the *current* belief state drops below this number during simulation.
minParticleCount = 1000

# True if the above horizon is relative to the initial belief, and false
# if it's relative to the current belief.
isAbsoluteHorizon = false

searchStrategy = ucb(2.0)

estimator = max()

heuristicTimeout = 0.1

savePolicy = false
loadInitialPolicy = false
policyPath = final-0.pol

actionType = discrete
numInputStepsActions = 1


observationType = discrete
numInputStepsObservation = 1

# The maximum L2-distance between observations for them to be considered similar
# Implementation is set to either 10000 or 0. So any value in between is fine
maxObservationDistance = 100 

[simulation]
interactive = true
particlePlotLimit = 100
